* С чем предстоит познакомиться
 Задание включает в себя знакомство и использование основных тулов, используемыми js разработчиком.
 Если еще нет аккаунта тут https://github.com/ , то зарегайся. Буду смотреть результаты там.
 Зарегался? Жми кнопку fork в правом верхнем углу у этого репозитория.
** Необходимые для выполнения задания тулы
*** Нормальный терминал. Если работаешь на винде - рекомендую установить cygwin и начать осваивать shell
    https://github.com/jlevy/the-art-of-command-line
    https://habrahabr.ru/post/126996/
*** Нормальный редактор кода. Лучшие варианты:
    - https://www.jetbrains.com/idea/ или https://www.jetbrains.com/webstorm/ (где брать ) думаю догадаешься. Удобная современная, но очень тормозючая IDE
    - https://atom.io/ - удобный современный, с кучей плагинов, но слегка тормозной редактор
    - https://www.visualstudio.com/ru/?rr=https%3A%2F%2Fwww.google.by%2F - если кодил на C#, думаю вкурсе)
    - https://ru.wikipedia.org/wiki/Vim - работает в терминале. ОЧЕНЬ удобный и быстрый редактор, требует примерно с недельку адаптации. Удобен для хождения на сервера по ssh, т.к. есть во всех linux дистрибутивах. Работал в нем 2 года.
    - https://www.gnu.org/software/emacs/ - работает в терминале. Сижу на нем последние пол года, все очень нравится, но требует отдельного погружения и довольно много времени поначалу
      Последние два варианта на долгосрочную перспективу.
      Подойдет в принципе и любой другой, дело вкуса.
*** git
    Система контроля версиями
    https://git-scm.com/book/ru/v1/%D0%92%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5-%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D1%8B-Git
*** NodeJS
    Брать отсюда https://nodejs.org/en/download/
    npm - пакетный менеджер для nodejs. 
    Если работаешь на макоси или линуксе - юзай https://yarnpkg.com/lang/en/ как альтернативу. 
    Установка пакетов проходит раз в 10 быстрее. На винде прирост в скорости не настолько велик.
*** express - будем юзать его для раздачи ресурсов и роутинга
    https://github.com/expressjs/express
*** webpack - для сборки фронтенда
    https://webpack.js.org/configuration/
    https://babeljs.io/ - компилятор es6 => es5. Используется в связке с вебпаком
*** Полезная информация
    https://habrahabr.ru/post/38730/ - что такое REST Api
    http://es6-features.org/ - краткий обзор ES2015 фич
    https://kangax.github.io/compat-table/es6/ - справочная табличка. Здесь можно смотреть какие фичи ECMAScript стандарта поддерживаются в каких окружениях


* Само задание
  Написать клиент-серверное приложение типа "бложик" =)

** Серверная часть
   Пока обойдемся без базы данных и будем все хранить в JSON формате на файловой системе.
   Для работы с фс - https://nodejs.org/api/fs.html
   Например одна статья - один файлик типа article-1.json:

   {
     "title": "Какая-то статья",
     "content": "Какой-то текст",
     "publishedAt": "1491571828007"  // см. https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Date/getTime
   }
   
   Пример REST API
   
   GET /articles => [ 'article-1', 'article-2', 'article-3' ] // Возвращает с сервера массив айдишников статей (в нашем случае - названий файлов)
   GET /article/article-1 => содержимое конкретного файла статьи в формате JSON

   Пока хватит 2-х ресурсов. Просто наклепай файликов с рандомным содержимым. Потом сделаем что бы их можно было удалять и модифицировать.

** Клиентская часть
   Нужно сделать страничку которая выводит список айдишников статей.
   При клике на любой айдишник должны показываться:
   1. Заголовок статьи
   2. Содержимое статьи
   3. Дата создания статьи

Начать можешь с любой части. Подозреваю что многое будет не понятно, так что спрашивай.
Если будешь начинать с клиента, можешь замокать сервер вот этой штукой https://github.com/typicode/json-server
